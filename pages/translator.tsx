import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useQuery, useMutation } from '../convex/_generated/react'
import { useCallback, useEffect } from 'react'
import React, { useState } from 'react';

const Translator: NextPage = () => {
  const setLocalized = useMutation('setLocalized');
  const [language, setLanguage] = useState("English");
  const languages = useQuery('getLanguages') ?? [];
  const translateRequest = useQuery('getTextToTranslate', language) ?? null;
  const [localizedText, setLocalizedText] = useState("");
  useEffect(() => {
    if (translateRequest) {
        let localizedText = null; //fetch(...);
        setLocalized(translateRequest.text, localizedText, translateRequest.language);
    }
  }, [translateRequest])
  return (
    <div className={styles.container}>
      <Head>
        <title>Next.js with Convex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <select onChange={(e) => setLanguage(e.target.value)}>
          {languages.map((language) =>
            <option value={language} key={language}>{language}</option>
          )}
        </select>
        <div>{
            translateRequest ? (
                <div>
        Text to translate:
        <p>
            {translateRequest.text}
        </p>
        <p>
            Translate into {translateRequest.language} please
        </p>
        Localized Text: <input type="text" value={localizedText} onChange={(e) => setLocalizedText(e.target.value)} />
        <button className={styles.button} onClick={(e) => {
            setLocalized(translateRequest.text, localizedText, translateRequest.language);
            setLocalizedText("");
        }}>
          Update Localization
        </button>
        </div>
            ) : (

    (
        <h1>Nothing to translate</h1>)
            )
        }</div>
      </main>

    </div>
  )
}

export default Translator
